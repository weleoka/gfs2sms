The World Meteorological Organization (WMO) Commission for Basic Systems (CBS) met in 1985 to create the GRIB (GRIdded Binary) format. The WGDM in February 1994, after major changes, approved revision 1 of the GRIB format. GRIB Edition 2 format was approved in 2003 at Geneva.



### gfs2sms versions


### Requirements
Python v2.7
GRIB API v1.14


### Overview

### Installation
1. Git clone or download archive and extract.
2. Make gfs2sms.py executable
3. Run as shell script "./gfs2sms.py" in a terminal.



### Usage



### Current Features:
General functinality:

Specs and options:



### Bugs, known Issues and missing Features:

Please report an issue if one is found.

Functionality:


Specs and options:


Security:


Code, style and performance:



### Contributing

If you'd like to contribute to gfs2sms's development, start by forking the GitHub repo:

https://github.com/weleoka/gfs2sms.git

Have a look at the known issues and missing features and take a pick or find something else that needs doing.

The best way to get your changes merged is as follows:

1. Clone your fork
2. Hack away
3. If you are adding significant new functionality, document it in the README
4. Do not change the version number, I will do that on my end
5. Push the repo up to GitHub
6. Send a pull request to [weleoka/gfs2sms](https://github.com/weleoka/gfs2sms)



### Licence

GNU GENERAL PUBLIC LICENSE

LICENCE for details.

Copyright (c) 2016 A.K. Weeks



### Sources, inspiration and notes



#### GRIB1 notes
X is known as shortName = 10u (the 10 makes for base ten is a guess)
Y is known as shortName = 10v



#### WGRIB commands
./wgrib -s ~/.zygrib/grib/sample.grb | grep ":12hr fcst:" | ./wgrib -i -text ~/.zygrib/grib/sample.grb -o outfile

./wgrib -s -d 1 ~/.zygrib/grib/sample.grb | ./wgrib -i -text ~/.zygrib/grib/sample.grb -o outfile1



#### Websites
http://forecast2phone.com/

https://software.ecmwf.int/wiki/display/GRIB/What+is+GRIB-API

https://github.com/erget/PythonicGRIB

http://www.libpng.org/pub/png/


#### Manuals
http://www.wmo.int/pages/prog/www/WDM/Guides/Guide-binary-2.html
http://weather.unisys.com/wxp/Appendices/Formats/GRIB.html
http://www.nws.noaa.gov/mdl/degrib/txtview.php?file=degrib.txt&dir=base



#### gribapi
I had to move the default installed files from 
/usr/local/lib/python2.7/site-packages/grib_api
to
/usr/local/lib/python2.7/dist-packages/grib_api
and add an __init__.py to load the module properly.


#### Python notes
math.atan2(y, x)

    Return atan(y / x), in radians. The result is between -pi and pi. The vector in the plane from the origin to point (x, y) makes this angle with the positive X axis. The point of atan2() is that the signs of both inputs are known to it, so it can compute the correct quadrant for the angle. For example, atan(1) and atan2(1, 1) are both pi/4, but atan2(-1, -1) is -3*pi/4. Usee math.degree to convert it from radians to degrees.


#### Free GRIB providers http://www.euronav.co.uk/Weather/gribfiles.htm
GMN GRIB CoverageGlobal Marine Networks (GMN), the leader in marine weather services, now offers 7 day wind forecasts of the world as a free public service via its GRIB Mail Robot. These forecasts are generated daily at 0015, 0615, 1215, 1815 GMT. Select areas or a custom LAT/LONG area possible to request with email.
http://www.globalmarinenet.com/free-grib-files-provided-by-global-marine-networks/


// http://www.globalmarinenet.com/free-grib-file-downloads/#download
```JAVASCRIPT
function build_url(region,data,dataset)
{
   if (typeof(dataset)==='undefined') dataset = 'nww3';
   var url;
   url = "http://gribs2.gmn-usa.com/cgi-bin/weather_fetch.pl?parameter=";
   url = url.concat(data,"&#038;days=7");
   url = url.replace("#038;","");
   url = url.concat("&#038;region=",region);
   url = url.replace("#038;","");
   url = url.concat("&#038;dataset=",dataset);
   url = url.replace("#038;","");
//alert(url); 
   window.location.href = url;
}

```



om.yr.no/verdata/grib/


--- Keys for GFS grib


wgrib -V (verbose):
rec 1:0:date 2016012106 UGRD kpds5=33 kpds6=105 kpds7=10 levels=(0,10) grid=255 10 m above gnd anl:
  UGRD=u wind [m/s]
  timerange 10 P1 0 P2 0 TimeU 1  nx 6 ny 6 GDS grid 0 num_in_ave 0 missing 0
  center 7 subcenter 0 process 81 Table 2 scan: WE:NS winds(N/S) 
  latlon: lat  60.000000 to 50.000000 by -2.000000  nxny 36
          long 10.000000 to 20.000000 by 2.000000, (6 x 6) scan 0 mode 128 bdsgrid 1
  min/max data -3.5 4.94  num bits 13  BDS_Ref -3272  DecScale 2 BinScale 0
rec 6:715:date 2016012106 VGRD kpds5=34 kpds6=105 kpds7=10 levels=(0,10) grid=255 10 m above gnd anl:
  VGRD=v wind [m/s]
  timerange 10 P1 0 P2 0 TimeU 1  nx 6 ny 6 GDS grid 0 num_in_ave 0 missing 0
  center 7 subcenter 0 process 81 Table 2 scan: WE:NS winds(N/S) 
  latlon: lat  60.000000 to 50.000000 by -2.000000  nxny 36
          long 10.000000 to 20.000000 by 2.000000, (6 x 6) scan 0 mode 128 bdsgrid 1
  min/max data -7.96 1.02  num bits 13  BDS_Ref -2353  DecScale 2 BinScale 0
rec 7:858:date 2016012106 VGRD kpds5=34 kpds6=105 kpds7=10 levels=(0,10) grid=255 10 m above gnd 24hr fcst:
  VGRD=v wind [m/s]
  timerange 10 P1 0 P2 24 TimeU 1  nx 6 ny 6 GDS grid 0 num_in_ave 0 missing 0
  center 7 subcenter 0 process 96 Table 2 scan: WE:NS winds(N/S) 
  latlon: lat  60.000000 to 50.000000 by -2.000000  nxny 36
          long 10.000000 to 20.000000 by 2.000000, (6 x 6) scan 0 mode 128 bdsgrid 1
  min/max data -5.77 6.9  num bits 13  BDS_Ref -2707  DecScale 2 BinScale 0




keys_iterator.py
edition = 1
centre = kwbc
typeOfLevel = heightAboveGround
level = 10
dataDate = 20160121
stepRange = 24
shortName = 10v
packingType = grid_simple
gridType = regular_ll



wgrib
1:0:d=16012106:UGRD:kpds5=33:kpds6=105:kpds7=10:TR=10:P1=0:P2=0:TimeU=1:10 m above:anl:NAve=0
2:143:d=16012106:UGRD:kpds5=33:kpds6=105:kpds7=10:TR=10:P1=0:P2=24:TimeU=1:10 m above gnd:24hr fcst:NAve=0
3:286:d=16012106:UGRD:kpds5=33:kpds6=105:kpds7=10:TR=10:P1=0:P2=48:TimeU=1:10 m above gnd:48hr fcst:NAve=0
4:429:d=16012106:UGRD:kpds5=33:kpds6=105:kpds7=10:TR=10:P1=0:P2=72:TimeU=1:10 m above gnd:72hr fcst:NAve=0
5:572:d=16012106:UGRD:kpds5=33:kpds6=105:kpds7=10:TR=10:P1=0:P2=96:TimeU=1:10 m above gnd:96hr fcst:NAve=0
6:715:d=16012106:VGRD:kpds5=34:kpds6=105:kpds7=10:TR=10:P1=0:P2=0:TimeU=1:10 m above gnd:anl:NAve=0
7:858:d=16012106:VGRD:kpds5=34:kpds6=105:kpds7=10:TR=10:P1=0:P2=24:TimeU=1:10 m above gnd:24hr fcst:NAve=0
8:1001:d=16012106:VGRD:kpds5=34:kpds6=105:kpds7=10:TR=10:P1=0:P2=48:TimeU=1:10 m above gnd:48hr fcst:NAve=0
9:1144:d=16012106:VGRD:kpds5=34:kpds6=105:kpds7=10:TR=10:P1=0:P2=72:TimeU=1:10 m above gnd:72hr fcst:NAve=0
10:1287:d=16012106:VGRD:kpds5=34:kpds6=105:kpds7=10:TR=10:P1=0:P2=96:TimeU=1:10 m above gnd:96hr fcst:NAve=0
